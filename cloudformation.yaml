---
AWSTemplateFormatVersion: '2010-09-09'
Description: Application and Cloud Platforms Jenkins Stack
Parameters:
  LogGroupName:
    Type: String
    Description: Cloudwatch LogGroup Name eg - 'test-logs'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 KeyPair Name
  VPC: 
    Type: AWS::EC2::VPC::Id
    Description: "VPC Id"
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Ec2 subnets"
  InstanceType:
    Type: String
    Default: t2.micro
    Description: "EC2 Instance Type"
  InternalCertificateId:
    Type: String 
    Description: ARN of the IAM server certificate to use with the ELB.
  AMI:
    Type: String
    Description: "AMI ID"

Resources:
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for elb
      SecurityGroupIngress:
      - 
        CidrIp: 0.0.0.0/0
        FromPort: '443'
        ToPort: '443'
        IpProtocol: "tcp"
      VpcId: !Ref VPC

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ec2
      SecurityGroupIngress:
      - 
        IpProtocol: "tcp"
        FromPort: '80'
        ToPort: '80'
        SourceSecurityGroupId: !Ref ELBSecurityGroup
      - 
        CidrIp: 0.0.0.0/0
        FromPort: '22'
        ToPort: '22'
        IpProtocol: "tcp"        
      VpcId: !Ref VPC
    DependsOn: ELBSecurityGroup

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref KeyName
      ImageId: !Ref AMI
      SecurityGroups:
      - !Ref EC2SecurityGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdf"
        Ebs:
          VolumeSize: '10'
          VolumeType: gp2
          Encrypted: true
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -ex
          exec >> /var/log/user-data.log
          exec 2>&1
          echo "Deploying Sinatra App"
          yum install -y rubygems
          gem install bundler
          mkdir /sinatraApp
          cd /sinatraApp
          git clone git@github.com:rea-cruitment/simple-sinatra-app.git
          bundle install
          bundle exec rackup
          #/usr/local/bin/user-data.sh
          /bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoscalingGroup --region ${AWS::Region}

  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: '0'
      MaxSize: '4'
      DesiredCapacity: '3'
      HealthCheckType: "ELB"
      HealthCheckGracePeriod: '300'
      LoadBalancerNames:
      - !Ref ELB
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        WaitOnResourceSignals: true
        PauseTime: PT30M
        SuspendProcesses:
        - ScheduledActions
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M
  EveningScaleDown:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      DesiredCapacity: '0'
      Recurrence: 0 11 * * *
      AutoScalingGroupName: !Ref AutoscalingGroup
    DependsOn:
    - AutoscalingGroup
  MorningScaleUp:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      DesiredCapacity: '1'
      Recurrence: 30 19 * * SUN-THU
      AutoScalingGroupName: !Ref AutoscalingGroup
    DependsOn:
    - AutoscalingGroup
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: '7'
  ELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups:
      - !Ref ELBSecurityGroup
      Subnets: !Ref Subnets
      Scheme: internal
      Listeners:
      - InstancePort: 80
        InstanceProtocol: HTTP
        LoadBalancerPort: 443
        Protocol: HTTPS
        SSLCertificateId: !Ref InternalCertificateId
      HealthCheck:
        Target: "HTTP:80/"
        HealthyThreshold: '3'
        UnhealthyThreshold: '2'
        Interval: '10'
        Timeout: '6'

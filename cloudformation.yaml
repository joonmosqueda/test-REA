---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS testREA Stack
Parameters:
  LogGroupName:
    Type: String
    Description: Cloudwatch LogGroup Name eg - 'test-logs'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 KeyPair Name
  VPC: 
    Type: AWS::EC2::VPC::Id
    Description: "VPC Id"
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Ec2 subnets"
  InstanceType:
    Type: String
    Default: t2.micro
    Description: "EC2 Instance Type"
  InternalCertificateId:
    Type: String 
    Description: ARN of the IAM server certificate to use with the ELB.
  AMI:
    Type: String
    Description: "AMI ID"
  InternalNetwork:
    Type: String
    Default: "0.0.0.0/0"
    Description: "Network CIDR"
  ExternalNetwork:
    Type: String
    Default: "0.0.0.0/0"
    Description: "Network CIDR"

Resources:
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for elb
      SecurityGroupIngress:
      - 
        CidrIp: !Ref ExternalNetwork
        FromPort: '443'
        ToPort: '443'
        IpProtocol: "tcp"
      VpcId: !Ref VPC

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ec2
      SecurityGroupIngress:
      - 
        IpProtocol: "tcp"
        FromPort: '9292'
        ToPort: '9292'
        SourceSecurityGroupId: !Ref ELBSecurityGroup
      - 
        CidrIp: !Ref InternalNetwork
        FromPort: '22'
        ToPort: '22'
        IpProtocol: "tcp"        
      VpcId: !Ref VPC
    DependsOn: ELBSecurityGroup

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref KeyName
      ImageId: !Ref AMI
      SecurityGroups:
      - !Ref EC2SecurityGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdf"
        Ebs:
          VolumeSize: '10'
          VolumeType: gp2
          Encrypted: true
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -ex
          exec >> /var/log/user-data.log
          exec 2>&1
          echo "Deploying Sinatra App"
          yum install -y git rubygems
          gem install bundler
          git clone https://github.com/rea-cruitment/simple-sinatra-app.git /REA/simple-sinatra-app
          cd /REA/simple-sinatra-app
          bundle install
          bundle exec rackup -o 0.0.0.0

  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: '0'
      MaxSize: '3'
      DesiredCapacity: '1'
      HealthCheckType: "ELB"
      HealthCheckGracePeriod: '300'
      LoadBalancerNames:
      - !Ref ELB

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: '7'

  ELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups:
      - !Ref ELBSecurityGroup
      Subnets: !Ref Subnets
      Scheme: internet-facing
      Listeners:
      - InstancePort: 9292
        InstanceProtocol: HTTP
        LoadBalancerPort: 443
        Protocol: HTTPS
        SSLCertificateId: !Ref InternalCertificateId
      HealthCheck:
        Target: "HTTP:9292/"
        HealthyThreshold: '3'
        UnhealthyThreshold: '2'
        Interval: '10'
        Timeout: '6'

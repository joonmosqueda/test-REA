# USAGE
#
#   . scripts/lib/utils
#
# DESCRIPTION
#
#   Utility files for bash scripts in the repository.
#
# KNOWN USAGES
#
#   ./scripts/*
#
# AUTHOR
#
#   Matt Fellows

# Get path of this script

function _path {
  called=$_
  CUR_PATH=""

  if [[ $called != $0 ]]; then
    CUR_PATH=$BASH_SOURCE
  else
    CUR_PATH=${BASH_SOURCE[0]}
  fi
  echo $CUR_PATH
}

function _curDir {
  echo $(dirname $(_path))
}


function step {
  echo ""
  echo " -----> ${@}"
}

function log {
  echo "        ${@}"
}

function stack_exists {
  STACK=$1
  aws --region $AWS_DEFAULT_REGION cloudformation describe-stacks --stack-name $1
}

function get_stack_output {
  STACK=$1
  OUTPUT=$2
  aws --region $AWS_DEFAULT_REGION cloudformation describe-stacks --stack-name $1 --output json | jq --raw-output '.Stacks[0].Outputs | .[] | select(.OutputKey=="'$OUTPUT'") | .OutputValue'
}

function source_proxy {
    # Source environment proxy file
    if [ -f "/etc/profile.d/proxy.sh" ]; then
        log "Sourcing proxy rules"
        bash /etc/profile.d/proxy.sh
        source /etc/profile.d/proxy.sh
    fi
    no_proxy="${no_proxy},artifactory.aus.thenational.com"
    NO_PROXY=$no_proxy
}

function setup_local_proxy {
    if [ x"${no_proxy}" = "x" ]; then
        log "Setting up local proxy rules"
        IP=$(ifconfig -a | egrep -o "10\.108\.[0-9]{1,3}\.[0-9]{1,3}" | head -n1)
        http_proxy=http://$IP:3128
        https_proxy=$http_proxy
        no_proxy=localhost,127.0.0.1,.thenational.com,.nab.com.au,*.ap-southeast-2.compute.internal,artifactory.aus.thenational.com,github.aus.thenational.com
        NO_PROXY=$no_proxy
    fi
}

function setup_docker_proxy_build_args {
    if [ x"${http_proxy}" != "x" ]; then
        log "Passing in build proxy arguments"
        BUILD_ARGS="--build-arg HTTP_PROXY=$http_proxy --build-arg HTTPS_PROXY=$https_proxy --build-arg http_proxy=$http_proxy --build-arg https_proxy=$https_proxy --build-arg NO_PROXY=$no_proxy --build-arg no_proxy=$no_proxy"
        PROXY_ARGS="-e HTTP_PROXY=$http_proxy -e HTTPS_PROXY=$https_proxy -e http_proxy=$http_proxy -e https_proxy=$https_proxy -e NO_PROXY=$no_proxy -e no_proxy=$no_proxy"
    fi
}

function prepare_docker_proxy {
    source_proxy
    setup_local_proxy
    setup_docker_proxy_build_args
}

function prepare_docker_envvars {
    log "Preparing docker env vars: started"

    export NAB_NULL="" # So next line doesn't fail with exit > 0
    ENV=$(env | egrep -i "^(ARTIFACTORY|NAB|NODE|AWS|ENV|DOCKER|NO_PROXY|HTTP)")
    echo '' > .env

    for i in "${ENV[@]}"
    do
        echo "$i" >> .env
    done

    log "Preparing docker env vars: finished"
}